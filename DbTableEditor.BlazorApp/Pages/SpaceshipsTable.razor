@page "/spaceships"
@inject HttpClient Http

<h3>Spaceships Table</h3>

<style>
    /* DivTable.com */
    .divTable {
        display: table;
        width: 100%;
    }

    .divTableRow {
        display: table-row;
    }

    .divTableCell, .divTableHead {
        display: table-cell;
    }

    .divTableHeading {
        background-color: #EEE;
        display: table-header-group;
        font-weight: bold;
    }

    .divTableFoot {
        background-color: #EEE;
        display: table-footer-group;
        font-weight: bold;
    }

    .divTableBody {
        display: table-row-group;
    }
</style>

@if (Spaceships == null)
{
    <span>Loading data...</span>
}
else
{
    <div class="divTable">
        <div class="divTableHeading">
            <div class="divTableRow">
                <div class="divTableHead">Name</div>
                <div class="divTableHead">Capacity</div>
                <div class="divTableHead">Energy</div>
                <div class="divTableHead">Firepower</div>
                <div class="divTableHead">Fuel</div>
                <div class="divTableHead">Hull</div>
                <div class="divTableHead">Speed</div>
                <div class="divTableHead">Staff</div>
                <div class="divTableHead">Weight</div>
                <div class="divTableHead">Fleet</div>
                <div class="divTableHead">Shipyard</div>
            </div>
        </div>
        <div class="divTableBody">
            @foreach (var ship in Spaceships)
            {
                var s = ship;
                <EditForm class="divTableRow" @ref="Form" Model="@s">
                    <DataAnnotationsValidator />
                    <div class="divTableCell">
                        <InputText @bind-Value="s.Name" />
                        <ValidationMessage For="@(() => s.Name)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Capacity" />
                        <ValidationMessage For="@(() => s.Capacity)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Energy" />
                        <ValidationMessage For="@(() => s.Energy)" />
                    </div>
                    <ValidationMessage For="@(() => s.Energy)" />
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Firepower" />
                        <ValidationMessage For="@(() => s.Firepower)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Fuel" />
                        <ValidationMessage For="@(() => s.Fuel)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Hull" />
                        <ValidationMessage For="@(() => s.Hull)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Speed" />
                        <ValidationMessage For="@(() => s.Speed)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Staff" />
                        <ValidationMessage For="@(() => s.Staff)" />
                    </div>
                    <div class="divTableCell">
                        <InputNumber @bind-Value="s.Weight" />
                        <ValidationMessage For="@(() => s.Weight)" />
                    </div>
                    <div class="divTableCell">
                        Fleet: @s.FleetId
                        <ValidationMessage For="@(() => s.FleetId)" />
                    </div>
                    <div class="divTableCell">
                        Shipyard: @s.ShipyardId
                        <ValidationMessage For="@(() => s.ShipyardId)" />
                    </div>
                </EditForm>
            }
        </div>
    </div>
}

@code {
    private List<Spaceship> Spaceships { get; set; }
    private EditForm Form { get; set; }

    private Spaceship Selected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetJsonAsync<IEnumerable<Spaceship>>("api/Spaceships");
        Spaceships = result.OrderBy(s => s.Id).ToList();
    }

    private async Task SubmitChanges(Spaceship ship)
    {
        if (ship.Id == 0)
        {
            Selected = await Http.PostJsonAsync<Spaceship>("api/spaceships", ship);
        }
        else
        {
            await Http.PutJsonAsync($"api/spaceships/{ship.Id}", ship);
        }
    }
}
