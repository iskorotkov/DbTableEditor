@inherits ComponentBase
@using System.Threading.Tasks

<table @attributes="@AdditionalAttributes">
    <CascadingValue Value="@EditContext">
        @ChildContent
    </CascadingValue>
</table>

@code {
    /// <summary>
    /// Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

    /// <summary>
    /// Supplies the edit context explicitly. If using this parameter, do not
    /// also supply <see cref="Model"/>, since the model value will be taken
    /// from the <see cref="EditContext.Model"/> property.
    /// </summary>
    [Parameter] public EditContext EditContext { get; set; }

    /// <summary>
    /// Specifies the content to be rendered inside this <see cref="EditForm"/>.
    /// </summary>
    [Parameter] public RenderFragment ChildContent { get; set; }

    /// <inheritdoc />
    protected override void OnParametersSet()
    {
        if (EditContext == null)
        {
            throw new InvalidOperationException($"{nameof(EditForm)} requires an {nameof(EditContext)} parameter.");
        }
    }
}
