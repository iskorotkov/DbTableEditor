<td>
    <InputNumber @attributes="@AdditionalAttributes"
                 Value="@Value" TValue="int" ValueChanged="@_onChangedDelegate"
                 ValueExpression="@ValueExpression" />
    <ValidationMessage For="@ValueExpression" />
    @ChildContent
</td>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public int Value { get; set; }

    [Parameter] public EventCallback<int> ValueChanged { get; set; }

    [Parameter] public Expression<Func<int>> ValueExpression { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; }

    private readonly Func<int, Task> _onChangedDelegate;

    public NumberCell()
    {
        _onChangedDelegate = OnValueChanged;
    }

    private async Task OnValueChanged(int val)
    {
        Value = val;
        await ValueChanged.InvokeAsync(val);
    }
}
